angular.module("cardapioAdminApp.auth",[]).controller("LoginController",function(e,o,t,n,r,s,i,a,c,u){o.login=function(){return t.client!==o.user.client&&"admin"!=o.user.client?void a.msgToast("Cliente ID inv√°lido. Tente novamente."):void c.loginClient(o.user).then(function(e){i.isLogged=!0,r.url(t.client+"/dashboard"),a.msgToast(e.client+", seja bem-vindo novamente.")},function(e){i.isLogged=!1,a.msgToast(e)})},o.gotoCardapio=function(){s.location.href="/client/#!/"+t.client+"/index"}}).controller("ResetPassController",function(e,o,t,n,r){e.resetPass=function(){r.resetPass({client:o.client,email:e.user.email}).then(function(e){n.msgToast("Sua senha foi resetada e enviada para o seu E-mail"),t.url(o.client+"/login")})["catch"](function(e){n.msgToast(e)})}}).controller("LogoutController",function(e,o,t,n,r,s,i,a,c){c.logoutClient().then(function(o){s.isLogged=!1,a.msgToast("Volte sempre ;)"),r.url(e.client.client+"/login")},function(e){s.isLogged=!1,a.msgToast("Ocorreu algum erro ao fazer logout.")})}).controller("ProfileController",function(e,o,t,n,r){console.log("controller: Profile Controller"),o.changePass=function(e){r.changePass(e).then(function(e){n.msgToast(e)},function(e){n.msgToast(e)})}}).service("userService",function(e,o,t,n,r,s,i,a,c){return{registerClient:function(t){var n=o.defer();return e.post(c.url+"/auth/register",t).success(function(e){n.resolve(e)}).error(function(e){n.reject(e)}),n.promise},loginClient:function(t){var n=o.defer();return e.post(c.url+"/auth/login",t).success(function(e){i.saveJwtToSessionStorage(e.token);var o=i.getJwtProfile();n.resolve(o)}).error(function(e){i.deleteJwtFromSessionStorage(),n.reject(e)}),n.promise},logoutClient:function(){var t=o.defer();return e.post(c.url+"/auth/logout").success(function(e,o){i.deleteJwtFromSessionStorage(),t.resolve("Success with logout"+e)}).error(function(e){t.reject(e.data)}),t.promise},changePass:function(t){var n=o.defer();return e.post(c.url+"/auth/changepass",t).success(function(e){n.resolve(e)}).error(function(e){n.reject(e)}),n.promise},resetPass:function(t){var n=o.defer();return e.post(c.url+"/auth/resetpass",t).success(function(e,o){n.resolve()}).error(function(e,o){n.reject(e)}),n.promise}}}).factory("AuthenticationService",function(e,o){if(!o.sessionStorage.token)var t={isLogged:!1};if(o.sessionStorage.token)var t={isLogged:!0};return e.auth=t,t}).factory("authInterceptor",function(e,o,t,n){return{request:function(e){return e.headers=e.headers||{},t.sessionStorage.token&&(e.headers.Authorization="Bearer "+t.sessionStorage.token),e},response:function(e){return 401===e.status&&alert("Not Logged On"),e||o.when(e)}}}).factory("base64",function(e,o){return{encode:function(e){var o="";return o},decode:function(e){var o=e.replace("-","+").replace("_","/");switch(o.length%4){case 0:break;case 2:o+="==";break;case 3:o+="=";break;default:throw"Illegal base64url string!"}return window.atob(o)},getJwtProfile:function(){var t=o.defer();if(e.sessionStorage.token){var n=e.sessionStorage.token.split(".")[1],r=JSON.parse(this.decode(n));t.resolve(r)}else t.reject("OOPS No JWT Token exists in sessionStorage!!! ");return t.promise},deleteJwtFromSessionStorage:function(){delete e.sessionStorage.token},saveJwtToSessionStorage:function(o){e.sessionStorage.token=o}}});